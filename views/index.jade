!!! 5

html
  head
    title= title

    script(type="text/javascript", src="/javascripts/jquery.min.js")
    script(type="text/javascript", src="/javascripts/raphael-min.js")
    script(type="text/javascript", src="/javascripts/socket.io.js")
    script(type="text/javascript", src="/javascripts/jsnake.js")
    script(type="text/javascript", src="/javascripts/input.js")

    style(type="text/css")
      .canvas{
        position: relative;
        width: 100%;
        height: 130px;
      }

    script(type='text/javascript')
      var socket = io.connect();

      var gameLoopID = null;
      var countdownID = null;

      var isMenu = true;
      var singleplayer = null;
      var multiplayer  = null;
      var isMultiplayer = false;

      var waitingdots  = 0;
      var waitingDotsID = null;

      var gameBoard = null;
      var pause = true;

      var game = new Game();
      var snake = new Snake();
      var snake2 = new Snake();

      var showCount = {
        i:    3,
        text: []
      };

      $(document).ready(function() {
        // Attention: magic numbers!
        var sizeX = 30;
        var sizeY = 20;
        gameBoard = Raphael( 10, 50, snake.width*sizeX+6, snake.height*sizeY+6 );
        gameBoard.sizeX = sizeX;
        gameBoard.sizeY = sizeY;

        snake.init();
        drawMenu();
        bindKeyboard();

      });


      function drawMenu() {
        console.log("Draw menu");
        singleplayer = gameBoard.text( gameBoard.width/2, gameBoard.height/2 - 40, "singleplayer" ).attr("font-size", 48);
        multiplayer  = gameBoard.text( gameBoard.width/2, gameBoard.height/2 + 40, "multiplayer"  ).attr("font-size", 48);

        singleplayer.attr("stroke", "#000").attr("stroke-width", "3");

      };


      function startGame() {
        isMenu = false;
        singleplayer.remove();
        multiplayer.remove();

        if( isMultiplayer ) {
          startMultiPlayer();
        } else {
          showCountDownThenStart();
        }

      };

      function startMultiPlayer() {
        socket.emit( 'wantMulti' );

        multiplayer = gameBoard.text( 5, 5, "Waiting for player" ).attr("font-size", 16).attr("text-anchor", "start");
        waitingDotsID = setInterval( printWaitingDots, 400 );
      };

      function printWaitingDots() {
         multiplayer.remove();
         var string = "Waiting for player..."
         waitingdots = (waitingdots+1) % 4;
         multiplayer = gameBoard.text( 5, 5, string.substr(0,18+waitingdots) ).attr("font-size", 16).attr("text-anchor", "start");
      }

      function togglePause() {
        socket.emit( 'togglePause' );
      };

      function showCountDownThenStart() {
        var t;
        if( showCount.i > 0 ) {
          var t = gameBoard.text( gameBoard.width/2, gameBoard.height/2, showCount.i );
          setTimeout ( 'showCountDownThenStart()', 1000 );
        } else {
          var t = gameBoard.text( gameBoard.width/2, gameBoard.height/2, "GO!" );

          togglePause();
        }
        t.attr("font-size", 12);

        t.animate( { "font-size": 320, easing: ">" }, 1000 );
        t.animate( { opacity: 0, easing: ">" }, 1000 );

        showCount.i--;
      }


      // Add a connect listener
      // ----------------------

      // Set initial snakes for multiplayer
      socket.on('setSnakes',function( snakeTJSON1, snakeTJSON2 ) {
        snake.remove();
        snake.init( snakeTJSON1 );
        snake2.remove();
        snake2.init( snakeTJSON2 );

        showCountDownThenStart();

      });

      // Change opponents direction
      socket.on('chDir',function( direction ) {
        snake2.direction = direction;
      });

      // Toggle between pause and play
      socket.on('togglePause',function( newPause ) {
        if ( newPause ) {
          pause = false;
          gameLoopID = setInterval( "game.play()", 200 );
        } else {
          pause = true;
          clearInterval( gameLoopID );
        }
      });



  body
    p Welcome to #{title}
